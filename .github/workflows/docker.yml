name: Publish Docker image
on:
  push:
    tags:
      - v*
jobs:
  build:
    name: build and publish
    runs-on: ubuntu-latest
    steps:
      - name: Define version
        run: |
          echo "POETRY_VERSION=$(echo '${{ toJSON(github) }}' | jq -r 'select(has("ref")) | .ref[11:] | split("-") | .[0]')" >> $GITHUB_ENV
          echo "PYTHON_VERSION=$(echo '${{ toJSON(github) }}' | jq -r 'select(has("ref")) | .ref[11:] | split("-") | .[1]')" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Log into GitHub Container Registry
      #   run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push of Python
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.python
          build-args: PYTHON_VERSION=${{ env.PYTHON_VERSION }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: unplus/python:${{ env.PYTHON_VERSION }}

      # - name: Python
      #   run: |
      #     docker buildx build \
      #       --push \
      #       --platform linux/amd64,linux/arm64 \
      #       --file Dockerfile.python \
      #       --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
      #       -t ghcr.io/unplus/python:${PYTHON_VERSION} .

      # - name: Poetry
      #   run: |
      #     docker buildx build \
      #       --push \
      #       --platform linux/amd64,linux/arm64 \
      #       --file Dockerfile.poetry \
      #       --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
      #       --build-arg POETRY_VERSION=${POETRY_VERSION} \
      #       -t ghcr.io/unplus/poetry:${POETRY_VERSION}-py${PYTHON_VERSION} .
